# Shortcuts
alias cp='cp -iv'
alias ll='ls -FGlAhp'
alias less='less -FSRXc'
eval $(thefuck --alias)

alias cd..='cd ../'                         # Go back 1 directory level (for fast typers)
alias ..='cd ../'                           # Go back 1 directory level
alias ...='cd ../../'                       # Go back 2 directory levels
alias .3='cd ../../../'                     # Go back 3 directory levels
alias .4='cd ../../../../'                  # Go back 4 directory levels
alias .5='cd ../../../../../'               # Go back 5 directory levels
alias .6='cd ../../../../../../'            # Go back 6 directory levels

#Open finder in currend dir
alias f='open -a Finder ./'
alias jn='jupyter notebook'


# Git aliases.
alias gs='git status'
alias gc='git commit'
alias gp='git pull --rebase'
alias gcam='git commit -am'
alias gl='git log --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit'

#directories
alias pgr='cd ~/Development'
alias godir=' cd /Users/julianbeck/Development/GoWorkspace/src/github.com/julianfbeck'
#copys ip adress to clipboard and removes new line
alias ipc='ipconfig getifaddr en0 | tr -d '\n' | pbcopy' 
alias pub='cat ~/.ssh/id_rsa.pub'
alias remote=git remote -v | grep fetch | awk '{print $2}' | sed -e 's/ssh:\/\/git@//' -e 's/:2222//' | sed 's_^_https://_' | xargs open

alias edit='code-insiders'
alias ci='code-insiders'
alias sMongo='mongod --config /usr/local/etc/mongod.conf'

alias ch='history | grep "git commit"'
alias hg='history | grep'
alias aliases='bat -l bash ~/dotfiles/dot/.aliases'

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi

# List all files colorized in long format, including dot files
alias la="ls -lahF ${colorflag}"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"
export LS_COLORS='no=00:fi=00:di=04;35:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jkg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

export LSCOLORS='Gxfxcxdxbxegedabagacad'

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias keys='for key in ~/.ssh/id_*; do ssh-keygen -l -f "${key}"; done | uniq'

# terraform
alias tf="terraform"
alias ta="terraform apply"
alias td="terraform destroy"
alias to="terraform output"
terraform() {
    if [[ $@ == "apply"* ]] || [[ $@ == "destroy"* ]]; then
        command terraform $(echo "$@" | sed 's/-y/--auto-approve/g')
    else
        command terraform "$@"
    fi
}


## kUbernets
alias k=kubectl
# dotfiles
alias dotfiles='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
# custom aliases




# Markant 
function check_parameter {
    if [[ "$1" == "mips" ]] ; then
        if [[ "$2" != "on-prem-prod" && "$2" != "infra-dev" && "$2" != "dev" && "$2" != "test" && "$2" != "accept" && "$2" != "prod" ]] ; then
            echo "second parameter has to be 'on-prem-prod', infra-dev', 'dev', 'test, 'accept' or 'prod'."
            return
        fi
    elif [[ "$1" == "meps" ]]; then
        if [[ "$2" != "dev" && "$2" != "test" && "$2" != "accept" && "$2" != "prod" ]] ; then 
            echo "second parameter has to be 'dev', 'test, 'accept' or 'prod'."
        fi
        return
    else
        echo "first parameter has to be 'mips' or 'meps'."
        return
    fi
}

function sp {
    check_parameter $1 $2

    declare -A usernames
    usernames[mipsinfra-dev]="ec97f09d-3eb4-4bf5-aa3f-ff69d3daaa41"
    usernames[mipsdev]="5e3200ca-6053-4019-a8f1-54c0cc0bb4d0"
    usernames[mipstest]="5e3200ca-6053-4019-a8f1-54c0cc0bb4d0"
    usernames[mipsaccept]="e882bf4b-f7ec-47ef-ba72-886ccabd8fca"
    usernames[mipsprod]="46d0c716-04ee-4e2d-bd82-4e4b09d68b12"
    usernames[mepsdev]="28f322a1-e60a-4350-99a8-4a442afc2dc6"
    usernames[mepstest]="28f322a1-e60a-4350-99a8-4a442afc2dc6"
    usernames[mepsaccept]="db107131-f502-4892-b288-74491012bb06"
    usernames[mepsprod]="70d56f5f-8e9b-40cb-86ea-2bb409e21e73"
    usernames[mipson-prem-prod]="2ef5c4fd-7e3d-48be-93e4-ff11f499559f"
    az login \
    --service-principal \
    -u "${usernames[$1$2]}" \
    -p $(gopass show -o mipsql/kapitan-sp/$1-ql-$2) \
    -t "eba24dc8-c5d5-4c1d-983b-425101d720ba"
}

